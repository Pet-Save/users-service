name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  AWS_RDS_TYPE: ${{secrets.AWS_RDS_TYPE}}
  AWS_RDS_HOST: ${{secrets.AWS_RDS_HOST}}
  AWS_RDS_PORT: ${{secrets.AWS_RDS_PORT}}
  AWS_RDS_USERNAME: ${{secrets.AWS_RDS_USERNAME}}
  AWS_RDS_PASSWORD: ${{secrets.AWS_RDS_PASSWORD}}
  AWS_RDS_DATABASE: ${{secrets.AWS_RDS_DATABASE}}
  ECR_REPOSITORY: pet-save-backend

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build, tag, and push image to Amazon ECR
          id: build-image
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            IMAGE_TAG: ${{ github.sha }}
          run: |
            # Build a docker container and push it to ECR so that it can be deployed to ECS.
            docker build \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            --build-arg PORT=8080 \
            --build-arg ENV=PRODUCTION \
            .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
            echo "image=$ECR_REGISTRY/$ECR_REPOSITORY --all-tags" >> $GITHUB_OUTPUT